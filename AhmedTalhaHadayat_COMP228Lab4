import java.sql.*;
import java.util.Scanner;
import java.util.UUID;

public class StudentManagementSystem {

    private static final String DB_FILE = "student_database.sqlite";

    public static void main(String[] args) {
        try (Connection connection = DriverManager.getConnection("jdbc:sqlite:" + DB_FILE)) {
            Statement statement = connection.createStatement();
            statement.executeUpdate("CREATE TABLE IF NOT EXISTS student (ID TEXT PRIMARY KEY, NAME TEXT, MAJOR TEXT)");

            Scanner scanner = new Scanner(System.in);
            while (true) {
                System.out.println("Choose an option:");
                System.out.println("1. Add New Student");
                System.out.println("2. List All Students");
                System.out.println("3. List Students by Major");
                System.out.println("4. Delete Student by ID");
                System.out.println("5. Exit");

                int choice = scanner.nextInt();
                scanner.nextLine(); // Consume the newline character

                switch (choice) {
                    case 1:
                        addStudent(connection);
                        break;
                    case 2:
                        listAllStudents(connection);
                        break;
                    case 3:
                        listStudentsByMajor(connection);
                        break;
                    case 4:
                        deleteStudentByID(connection);
                        break;
                    case 5:
                        System.out.println("Exiting the program...");
                        return;
                    default:
                        System.out.println("Invalid choice. Please enter a number between 1 and 5.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void addStudent(Connection connection) {
        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "INSERT INTO student (ID, NAME, MAJOR) VALUES (?, ?, ?)")) {

            Scanner scanner = new Scanner(System.in);

            System.out.println("Enter student name:");
            String name = scanner.nextLine();

            System.out.println("Enter student major:");
            String major = scanner.nextLine();

            String uuid = UUID.randomUUID().toString();
            preparedStatement.setString(1, uuid);
            preparedStatement.setString(2, name);
            preparedStatement.setString(3, major);
            preparedStatement.executeUpdate();

            System.out.println("Student added successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void listAllStudents(Connection connection) {
        try (Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery("SELECT * FROM student")) {

            printStudentList(resultSet);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void listStudentsByMajor(Connection connection) {
        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "SELECT * FROM student WHERE MAJOR = ?")) {

            Scanner scanner = new Scanner(System.in);

            System.out.println("Enter student major:");
            String major = scanner.nextLine();

            preparedStatement.setString(1, major);
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                printStudentList(resultSet);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void deleteStudentByID(Connection connection) {
        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "DELETE FROM student WHERE ID = ?")) {

            Scanner scanner = new Scanner(System.in);

            System.out.println("Enter student ID:");
            String id = scanner.nextLine();

            preparedStatement.setString(1, id);
            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                System.out.println("Student deleted successfully.");
            } else {
                System.out.println("No student found with the given ID.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void printStudentList(ResultSet resultSet) throws SQLException {
        System.out.println("+--------------------------+");
        System.out.println("|   ID   |   NAME     |   MAJOR   |");
        System.out.println("+--------------------------+");

        while (resultSet.next()) {
            String id = resultSet.getString("ID");
            String name = resultSet.getString("NAME");
            String major = resultSet.getString("MAJOR");

            System.out.printf("| %5s | %-10s | %10s |\n", id, name, major);
        }

        System.out.println("+--------------------------+");
    }
}
